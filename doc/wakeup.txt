准确来说，应该是Selector的wakeup()，即Selector的唤醒，为什么要有这个唤醒操作呢？那还得从Selector的选择方式 来说明，前文已经总结过Selector的选择方式有三种：
	select()、select(timeout)、selectNow()。
	selectNow的选择过程是非阻塞的，与wakeup没有太大关系。
	select(timeout)和select()的选择过程是阻塞的，其他线程如果想终止这个过程，就可以调用wakeup来唤醒。
	
wakeup的原理
	既然Selector阻塞式选择因为找到感兴趣事件ready才会返回(排除超时、中断)，就给它构造一个感兴趣事件ready的场景即可。下图可以比较形象的形容wakeup原理：
	Selector管辖的FD(文件描述符，linux即为fd，对应一个文件，windows下对应一个句柄；每个可选择Channel在创建的时 候，就生成了与其对应的FD，Channel与FD的联系见另
	一篇)中包含某一个FD A， A对数据可读事件感兴趣，当往图中漏斗端放入(写入)数据，数据会流进A，于是A有感兴趣事件ready，最终，select得到结果而返回。